name: Etherpad Rebuild

on:
  schedule:
    - cron: '0 4 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ] # Publish semver tags as releases.
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io  # Use docker.io for Docker Hub if empty
  IMAGE_NAME: ${{ github.repository }} # github.repository as <account>/<repo>
  ETHERPAD_PLUGINS: >
    ep_align
    ep_headings2
    ep_table_of_contents
    ep_font_size
    ep_markdown
    ep_cursortrace
    ep_font_color
    ep_set_title_on_pad
    ep_comments_page
    ep_font_family
    ep_hide_referrer
    

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check Etherpad parent image
        id: check
        uses: twiddler/is-my-docker-parent-image-out-of-date@v1.0.1
        with:
          parent-image: etherpad/etherpad:latest
          my-image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main

  build:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.out-of-date == 'true'
    permissions:
      contents: read
      packages: write
      id-token: write # This is used to complete the identity challenge with sigstore/fulcio when running outside of PRs.

    steps:
      - name: Checkout Etherpad repository
        uses: actions/checkout@v4
        with:
          repository: ether/etherpad-lite
      
      # Install the cosign tool except on PR: https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.4.1'

      # Set up BuildKit Docker container builder to be able to build multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: "ETHERPAD_PLUGINS=${{ env.ETHERPAD_PLUGINS }}"

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
